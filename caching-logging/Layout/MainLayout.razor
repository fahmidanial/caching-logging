@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using caching_logging.Services
@using Blazored.LocalStorage
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <div class="page @themeClass">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row px-4">
                <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
                <AuthorizeView>
                    <Authorized>
                        <a href="javascript:void(0)" @onclick="Logout">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="/account/login">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</CascadingAuthenticationState>

@code {
    private string themeClass = "light-theme"; // Default theme

    protected override async Task OnInitializedAsync()
    {
        // Load the theme when the component initializes
        await LoadTheme();
    }

    private async Task LoadTheme()
    {
        try
        {
            // Retrieve the current theme from LocalStorage (default to "Light" if not set)
            var theme = await LocalStorage.GetItemAsync<string>("Theme") ?? "Light";
            themeClass = theme == "Dark" ? "dark-theme" : "light-theme";

            // Apply the theme
            await JSRuntime.InvokeVoidAsync("applyTheme", theme);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading theme: {ex.Message}");
        }
    }

    private async Task Logout()
    {
        var authProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        authProvider.MarkUserAsLoggedOut();
        Navigation.NavigateTo("/");
    }
}